@id [][]
@dup [r^zlwl][]
@dupd [rw {%dup} wl][]
@dupdd [rw {%dupd} wl][]
@swap [rwrwzwlwl][]
@swapd [rw {%swap} wl][]
@over [{%dupd} {%swap}][]
@tuck [{%dup} {%swapd}][]
@pick [rw {%over} wl {%swap}][]
@drop [r%][]
@drop2 [{%drop} {%drop}][]
@drop3 [{%drop} {%drop2}][]
@drop4 [{%drop2} {%drop2}][]
@drop5 [{%drop2} {%drop3}][]
@drop6 [{%drop3} {%drop3}][]
@drop7 [{%drop3} {%drop4}][]
@drop8 [{%drop4} {%drop4}][]
@drop9 [{%drop4} {%drop5}][]
@nip [rw {%drop} wl][]
@nip2 [rw {%drop2} wl][]
@nip3 [rw {%drop3} wl][]
@nip4 [rw {%drop4} wl][]
@dropd [{%nip}][]
@rot [{%swapd}{%swap}][]
@unrot [{%swap}{%swapd}][]
@spin [{%swap}{%swapd}{%swap}][]
@roll [rw {%rot} wl {%swap}][]
@unroll [{%swap} rw {%unrot} wl][]
@intro1 [vvrwlcl][]
@elim1 [rvrwlcc][]
@unit [{%intro1}][]
@pick1st [{%dup}][]
@pick2nd [rw {%pick1st} wl {%swap}][]
@pick3rd [rw {%pick2nd} wl {%swap}][]
@pick4th [rw {%pick3rd} wl {%swap}][]
@pick5th [rw {%pick4th} wl {%swap}][]
@pick6th [rw {%pick5th} wl {%swap}][]
@pick7th [rw {%pick6th} wl {%swap}][]
@rotd [rw {%rot} wl][]
@rolld [rw {%roll} wl][]
@unrotd [rw {%unrot} wl][]
@unrolld [rw {%unroll} wl][]
@intro1d [rw {%intro1} wl][]
@elim1d [rw {%elim1} wl][]
@roll2 [{%swap}][]
@roll3 [{%rot}][]
@roll4 [{%roll}][]
@roll5 [rw {%roll4} wl {%swap}][]
@roll6 [rw {%roll5} wl {%swap}][]
@roll7 [rw {%roll6} wl {%swap}][]
@roll8 [rw {%roll7} wl {%swap}][]
@roll9 [rw {%roll8} wl {%swap}][]
@roll2d [{%swapd}][]
@roll3d [{%rotd}][]
@roll4d [{%rolld}][]
@roll5d [rw {%roll5} wl][]
@roll6d [rw {%roll6} wl][]
@roll7d [rw {%roll7} wl][]
@roll8d [rw {%roll8} wl][]
@roll9d [rw {%roll9} wl][]
@unroll2 [{%swap}][]
@unroll3 [{%unrot}][]
@unroll4 [{%unroll}][]
@unroll5 [{%swap} rw {%unroll4} wl][]
@unroll6 [{%swap} rw {%unroll5} wl][]
@unroll7 [{%swap} rw {%unroll6} wl][]
@unroll8 [{%swap} rw {%unroll7} wl][]
@unroll9 [{%swap} rw {%unroll8} wl][]
@unroll2d [{%swapd}][]
@unroll3d [{%unrotd}][]
@unroll4d [{%unrolld}][]
@unroll5d [rw {%unroll5} wl][]
@unroll6d [rw {%unroll6} wl][]
@unroll7d [rw {%unroll7} wl][]
@unroll8d [rw {%unroll8} wl][]
@unroll9d [rw {%unroll9} wl][]
@abc:v [v][]
@abc:r [r][]
@abc:w [w][]
@abc:l [l][]
@abc:c [c][]
@abc:z [z][]
@abc:V [V][]
@abc:R [R][]
@abc:W [W][]
@abc:L [L][]
@abc:C [C][]
@abc:Z [Z][]
@abc:distrib [D][]
@abc:factor [F][]
@abc:merge [M][]
@abc:assert [K][]
@abc:copy [^][]
@abc:drop [%][]
@abc:relevant [k][]
@abc:affine [f][]
@abc:apply [$][]
@abc:compose [o][]
@abc:quote ['][]
@abc:condAp [?][]
@abc:intro0 [#][]
@abc:d0 [0][]
@abc:d1 [1][]
@abc:d2 [2][]
@abc:d3 [3][]
@abc:d4 [4][]
@abc:d5 [5][]
@abc:d6 [6][]
@abc:d7 [7][]
@abc:d8 [8][]
@abc:d9 [9][]
@abc:add [+][]
@abc:mul [*][]
@abc:recip [/][]
@abc:negate [-][]
@abc:divMod [Q][]
@abc:compare [>][]
@abc:SP [ ][]
@abc:LF [
][]
@anno:beqv [{&equivalent}][]
@anno:beqv.doc
"Assert two blocks are behaviorally equivalent.
~[v'c]
@anno:eqv [{&â‰¡}][]
@anno:eqv.doc
"Assert two values (of any type) are structurally equivalent.
 This is very useful for automatic tests and safety analysis.
~[v'c]
@anno:commu [{&commutative}][]
@anno:commu.doc
"Assert that arguments to an arity-2 function are commutative.
~
@anno:assoc [{&associative}][]
@anno:assoc.doc
"Assert that arguments to an arity-2 function are associative.
~
